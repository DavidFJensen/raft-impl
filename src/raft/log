Test: concurrent Start()s ...
[1;32m[peer 0] 2020/12/11 14:50:05.390673 raft.go:96: election timeout![0m
[1;32m[peer 0] 2020/12/11 14:50:05.390947 raft.go:96: start election.[0m
[1;32m[peer 0] 2020/12/11 14:50:05.390972 raft.go:96: become a candidate.[0m
[1;32m[peer 0] 2020/12/11 14:50:05.390994 raft.go:102: My term increases to 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.391062 raft.go:102: send request vote to peer 2.[0m
[1;32m[peer 0] 2020/12/11 14:50:05.391291 raft.go:102: send request vote to peer 1.[0m
[1;34m[peer 2] 2020/12/11 14:50:05.391927 raft.go:102: Receive vote request from peer 0 in term 1, my term is 0. Now my votedFor: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.392224 raft.go:102: get voted from 2! voteNum: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.392256 raft.go:96: become a leader.[0m
[1;33m[peer 1] 2020/12/11 14:50:05.392296 raft.go:102: Receive vote request from peer 0 in term 1, my term is 0. Now my votedFor: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.392311 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.392506 raft.go:102: send heart beat to peer 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.392539 raft.go:102: get voted from 1! voteNum: 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.392400 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.392704 raft.go:102: send heart beat to peer 2[0m
[1;33m[peer 1] 2020/12/11 14:50:05.393301 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.393391 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.393424 raft.go:102: rf.commitIndex: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.393315 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.393638 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.393673 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.478319 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.478434 raft.go:102: send heart beat to peer 2[0m
[1;34m[peer 2] 2020/12/11 14:50:05.478881 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.478933 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.478955 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.478326 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.479175 raft.go:102: send heart beat to peer 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.479477 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.479514 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.479533 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.578493 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.578628 raft.go:102: send heart beat to peer 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.578493 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.578809 raft.go:102: send heart beat to peer 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.579183 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.579243 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.579266 raft.go:102: rf.commitIndex: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.579339 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.579389 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.579414 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.678659 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.678720 raft.go:102: send heart beat to peer 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.678658 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.678840 raft.go:102: send heart beat to peer 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.678908 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.678963 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.678977 raft.go:102: rf.commitIndex: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.679033 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.679054 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.679062 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.778875 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.779000 raft.go:102: send heart beat to peer 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.778880 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.779080 raft.go:102: send heart beat to peer 2[0m
[1;33m[peer 1] 2020/12/11 14:50:05.779504 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.779557 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.779585 raft.go:102: rf.commitIndex: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.779672 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.779731 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.779754 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.877809 raft.go:102: Called Start() on command: 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.877937 raft.go:102: Start agreement on command: 1 [int][0m
[1;32m[peer 0] 2020/12/11 14:50:05.878050 raft.go:102: I am the leader. I append the new command, now logs: [{1 1}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.878177 raft.go:102: Called Start() on command: 104[0m
[1;32m[peer 0] 2020/12/11 14:50:05.878338 raft.go:102: Start agreement on command: 104 [int][0m
[1;32m[peer 0] 2020/12/11 14:50:05.878405 raft.go:102: I am the leader. I append the new command, now logs: [{1 1} {1 104}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.878480 raft.go:102: Sending new entries to peer 2, entries: [{1 1} {1 104}], leaderCommit: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.878506 raft.go:102: nextIndex[2]: 0, lastLogIndex: 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.878562 raft.go:102: Called Start() on command: 100[0m
[1;32m[peer 0] 2020/12/11 14:50:05.878620 raft.go:102: Start agreement on command: 100 [int][0m
[1;32m[peer 0] 2020/12/11 14:50:05.878656 raft.go:102: I am the leader. I append the new command, now logs: [{1 1} {1 104} {1 100}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.878745 raft.go:102: Sending new entries to peer 2, entries: [{1 1} {1 104} {1 100}], leaderCommit: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.878772 raft.go:102: nextIndex[2]: 0, lastLogIndex: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.878949 raft.go:102: Sending new entries to peer 1, entries: [{1 1} {1 104} {1 100}], leaderCommit: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.879028 raft.go:102: nextIndex[1]: 0, lastLogIndex: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.879107 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.879178 raft.go:102: send heart beat to peer 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.879249 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.879299 raft.go:102: Receive append entries [{1 1} {1 104} {1 100}] from peer 0 in term 1, receiver's term is 1.[0m
[1;34m[peer 2] 2020/12/11 14:50:05.879325 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 0	logs: [][0m
[1;34m[peer 2] 2020/12/11 14:50:05.879367 raft.go:102: k: 0, upperbound: 3[0m
[1;34m[peer 2] 2020/12/11 14:50:05.879390 raft.go:102: k: 0, upperbound: 3[0m
[1;34m[peer 2] 2020/12/11 14:50:05.879420 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.879443 raft.go:102: rf.commitIndex: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.879565 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.879613 raft.go:102: Receive append entries [{1 1} {1 104} {1 100}] from peer 0 in term 1, receiver's term is 1.[0m
[1;33m[peer 1] 2020/12/11 14:50:05.879639 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 0	logs: [][0m
[1;33m[peer 1] 2020/12/11 14:50:05.879664 raft.go:102: k: 0, upperbound: 3[0m
[1;32m[peer 0] 2020/12/11 14:50:05.879338 raft.go:102: Sending new entries to peer 2, entries: [{1 1} {1 104} {1 100}], leaderCommit: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.879723 raft.go:102: nextIndex[2]: 0, lastLogIndex: 2[0m
[1;33m[peer 1] 2020/12/11 14:50:05.879689 raft.go:102: k: 0, upperbound: 3[0m
[1;33m[peer 1] 2020/12/11 14:50:05.879831 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.879873 raft.go:102: rf.commitIndex: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880007 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880123 raft.go:102: Receive append entries [{1 1} {1 104}] from peer 0 in term 1, receiver's term is 1.[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880165 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 3	logs: [{1 1} {1 104} {1 100}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.880189 raft.go:102: k: 0, upperbound: 2[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880213 raft.go:102: k: 2, upperbound: 2[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880240 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.880262 raft.go:102: rf.commitIndex: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.880023 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.880522 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.880544 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.879365 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.880810 raft.go:102: send heart beat to peer 2[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880738 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.880075 raft.go:102: Called Start() on command: 102[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880916 raft.go:102: Receive append entries [{1 1} {1 104} {1 100}] from peer 0 in term 1, receiver's term is 1.[0m
[1;34m[peer 2] 2020/12/11 14:50:05.880969 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 3	logs: [{1 1} {1 104} {1 100}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.880996 raft.go:102: k: 0, upperbound: 3[0m
[1;34m[peer 2] 2020/12/11 14:50:05.881020 raft.go:102: k: 3, upperbound: 3[0m
[1;32m[peer 0] 2020/12/11 14:50:05.880935 raft.go:102: Start agreement on command: 102 [int][0m
[1;32m[peer 0] 2020/12/11 14:50:05.881081 raft.go:102: I am the leader. I append the new command, now logs: [{1 1} {1 104} {1 100} {1 102}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.881141 raft.go:102: Sending new entries to peer 2, entries: [{1 1} {1 104} {1 100} {1 102}], leaderCommit: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.881163 raft.go:102: nextIndex[2]: 0, lastLogIndex: 3[0m
[1;32m[peer 0] 2020/12/11 14:50:05.881317 raft.go:102: Called Start() on command: 101[0m
[1;32m[peer 0] 2020/12/11 14:50:05.881360 raft.go:102: Start agreement on command: 101 [int][0m
[1;32m[peer 0] 2020/12/11 14:50:05.881393 raft.go:102: I am the leader. I append the new command, now logs: [{1 1} {1 104} {1 100} {1 102} {1 101}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.881479 raft.go:102: Sending new entries to peer 2, entries: [{1 1} {1 104} {1 100} {1 102} {1 101}], leaderCommit: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.881503 raft.go:102: nextIndex[2]: 0, lastLogIndex: 4[0m
[1;32m[peer 0] 2020/12/11 14:50:05.881593 raft.go:102: Sending new entries to peer 1, entries: [{1 1} {1 104} {1 100} {1 102} {1 101}], leaderCommit: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.881625 raft.go:102: nextIndex[1]: 0, lastLogIndex: 4[0m
[1;34m[peer 2] 2020/12/11 14:50:05.881047 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.881952 raft.go:102: rf.commitIndex: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.882055 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.882104 raft.go:102: Receive append entries [{1 1} {1 104} {1 100} {1 102} {1 101}] from peer 0 in term 1, receiver's term is 1.[0m
[1;33m[peer 1] 2020/12/11 14:50:05.882134 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 3	logs: [{1 1} {1 104} {1 100}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.882155 raft.go:102: k: 0, upperbound: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:05.882178 raft.go:102: k: 3, upperbound: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:05.882210 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102} {1 101}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.882233 raft.go:102: rf.commitIndex: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.882180 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.882301 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.882325 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.882162 raft.go:102: Before updating nextindex for peer 2, nextindex: 0[0m
[1;32m[peer 0] 2020/12/11 14:50:05.882459 raft.go:102: Suceess. Update nextindex for peer 2: 3, because newly add [{1 1} {1 104} {1 100}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.882483 raft.go:102: set rf.commitIndex: 2, cnt: 2, len/2: 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.882521 raft.go:102: Called Start() on command: 103[0m
[1;32m[peer 0] 2020/12/11 14:50:05.882551 raft.go:102: Start agreement on command: 103 [int][0m
[1;32m[peer 0] 2020/12/11 14:50:05.882583 raft.go:102: I am the leader. I append the new command, now logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.882523 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.882624 raft.go:102: Receive append entries [{1 1} {1 104} {1 100} {1 102}] from peer 0 in term 1, receiver's term is 1.[0m
[1;34m[peer 2] 2020/12/11 14:50:05.882657 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 3	logs: [{1 1} {1 104} {1 100}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.882679 raft.go:102: k: 0, upperbound: 4[0m
[1;34m[peer 2] 2020/12/11 14:50:05.882709 raft.go:102: k: 3, upperbound: 4[0m
[1;34m[peer 2] 2020/12/11 14:50:05.882737 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.882760 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.882969 raft.go:102: Sending new entries to peer 1, entries: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}], leaderCommit: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.882997 raft.go:102: nextIndex[1]: 0, lastLogIndex: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883175 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883183 raft.go:102: Receive append entries [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}] from peer 0 in term 1, receiver's term is 1.[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883189 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 5	logs: [{1 1} {1 104} {1 100} {1 102} {1 101}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883193 raft.go:102: k: 0, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883216 raft.go:102: k: 5, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883236 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883240 raft.go:102: rf.commitIndex: 2[0m
[1;34m[peer 2] 2020/12/11 14:50:05.883297 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.883304 raft.go:102: Receive append entries [{1 1} {1 104} {1 100} {1 102} {1 101}] from peer 0 in term 1, receiver's term is 1.[0m
[1;34m[peer 2] 2020/12/11 14:50:05.883310 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 4	logs: [{1 1} {1 104} {1 100} {1 102}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.883313 raft.go:102: k: 0, upperbound: 5[0m
[1;34m[peer 2] 2020/12/11 14:50:05.883320 raft.go:102: k: 4, upperbound: 5[0m
[1;34m[peer 2] 2020/12/11 14:50:05.883326 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102} {1 101}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.883330 raft.go:102: rf.commitIndex: -1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883367 raft.go:102: Sending new entries to peer 1, entries: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}], leaderCommit: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883372 raft.go:102: nextIndex[1]: 0, lastLogIndex: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883470 raft.go:102: Checking whether to apply. commitIndex: 2, lastApplied: -1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883476 raft.go:102: Apply message with index 1 and command 1![0m
[1;33m[peer 1] 2020/12/11 14:50:05.883481 raft.go:102: Receive append entries [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}] from peer 0 in term 1, receiver's term is 1.[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883487 raft.go:102: before updating, args.PrevLogIndex: -1	len(rf.logs): 6	logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883491 raft.go:102: k: 0, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883495 raft.go:102: k: 6, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883501 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883505 raft.go:102: rf.commitIndex: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883535 raft.go:102: Before updating nextindex for peer 2, nextindex: 3[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883542 raft.go:102: Suceess. Update nextindex for peer 2: 3, because newly add [{1 1} {1 104} {1 100}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883552 raft.go:102: Before updating nextindex for peer 1, nextindex: 0[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883561 raft.go:102: Suceess. Update nextindex for peer 1: 3, because newly add [{1 1} {1 104} {1 100}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883566 raft.go:102: Before updating nextindex for peer 2, nextindex: 3[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883570 raft.go:102: Suceess. Update nextindex for peer 2: 2, because newly add [{1 1} {1 104}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883579 raft.go:102: Sending new entries to peer 1, entries: [{1 102} {1 101} {1 103}], leaderCommit: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883583 raft.go:102: nextIndex[1]: 3, lastLogIndex: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883646 raft.go:102: Checking whether to apply. commitIndex: 2, lastApplied: 0[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883652 raft.go:102: Apply message with index 2 and command 104![0m
[1;33m[peer 1] 2020/12/11 14:50:05.883657 raft.go:102: Receive append entries [{1 102} {1 101} {1 103}] from peer 0 in term 1, receiver's term is 1.[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883663 raft.go:102: before updating, args.PrevLogIndex: 2	len(rf.logs): 6	logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883667 raft.go:102: k: 3, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883671 raft.go:102: k: 6, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883676 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883683 raft.go:102: rf.commitIndex: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883716 raft.go:102: Before updating nextindex for peer 1, nextindex: 3[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883723 raft.go:102: Suceess. Update nextindex for peer 1: 5, because newly add [{1 1} {1 104} {1 100} {1 102} {1 101}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883727 raft.go:102: set rf.commitIndex: 4, cnt: 2, len/2: 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883736 raft.go:102: Sending new entries to peer 1, entries: [{1 103}], leaderCommit: 4[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883741 raft.go:102: nextIndex[1]: 5, lastLogIndex: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883821 raft.go:102: Checking whether to apply. commitIndex: 2, lastApplied: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883828 raft.go:102: Apply message with index 3 and command 100![0m
[1;33m[peer 1] 2020/12/11 14:50:05.883832 raft.go:102: Receive append entries [{1 103}] from peer 0 in term 1, receiver's term is 1.[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883838 raft.go:102: before updating, args.PrevLogIndex: 4	len(rf.logs): 6	logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883856 raft.go:102: k: 5, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883860 raft.go:102: k: 6, upperbound: 6[0m
[1;33m[peer 1] 2020/12/11 14:50:05.883866 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;33m[peer 1] 2020/12/11 14:50:05.883870 raft.go:102: rf.commitIndex: 4[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883905 raft.go:102: Before updating nextindex for peer 2, nextindex: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883912 raft.go:102: Suceess. Update nextindex for peer 2: 4, because newly add [{1 1} {1 104} {1 100} {1 102}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883916 raft.go:102: Before updating nextindex for peer 1, nextindex: 5[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883922 raft.go:102: Suceess. Update nextindex for peer 1: 6, because newly add [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883926 raft.go:102: set rf.commitIndex: 5, cnt: 2, len/2: 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883931 raft.go:102: Before updating nextindex for peer 2, nextindex: 4[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883951 raft.go:102: Suceess. Update nextindex for peer 2: 5, because newly add [{1 1} {1 104} {1 100} {1 102} {1 101}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883956 raft.go:102: Before updating nextindex for peer 1, nextindex: 6[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883962 raft.go:102: Suceess. Update nextindex for peer 1: 6, because newly add [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.883968 raft.go:102: Before updating nextindex for peer 1, nextindex: 6[0m
[1;32m[peer 0] 2020/12/11 14:50:05.883972 raft.go:102: Suceess. Update nextindex for peer 1: 6, because newly add [{1 102} {1 101} {1 103}][0m
reading cfg.logs ... expected index: 2
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][2] - cmd1: 104, ok: true
cfg.logs[1]: map[1:1 2:104 3:100]
cfg.logs[1][2] - cmd1: 104, ok: true
cfg.logs[2]: map[]
cfg.logs[2][2] - cmd1: 0, ok: false
[1;32m[peer 0] 2020/12/11 14:50:05.884019 raft.go:102: Sending new entries to peer 2, entries: [{1 103}], leaderCommit: 5[0m
[1;32m[peer 0] 2020/12/11 14:50:05.884023 raft.go:102: nextIndex[2]: 5, lastLogIndex: 5[0m
[1;34m[peer 2] 2020/12/11 14:50:05.884078 raft.go:102: Checking whether to apply. commitIndex: -1, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.884088 raft.go:102: Receive append entries [{1 103}] from peer 0 in term 1, receiver's term is 1.[0m
[1;34m[peer 2] 2020/12/11 14:50:05.884094 raft.go:102: before updating, args.PrevLogIndex: 4	len(rf.logs): 5	logs: [{1 1} {1 104} {1 100} {1 102} {1 101}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.884098 raft.go:102: k: 5, upperbound: 6[0m
[1;34m[peer 2] 2020/12/11 14:50:05.884102 raft.go:102: k: 5, upperbound: 6[0m
[1;34m[peer 2] 2020/12/11 14:50:05.884110 raft.go:102: after updating, logs: [{1 1} {1 104} {1 100} {1 102} {1 101} {1 103}][0m
[1;34m[peer 2] 2020/12/11 14:50:05.884115 raft.go:102: rf.commitIndex: 5[0m
[1;32m[peer 0] 2020/12/11 14:50:05.884146 raft.go:102: Before updating nextindex for peer 2, nextindex: 5[0m
[1;32m[peer 0] 2020/12/11 14:50:05.884152 raft.go:102: Suceess. Update nextindex for peer 2: 6, because newly add [{1 103}][0m
[1;32m[peer 0] 2020/12/11 14:50:05.884157 raft.go:102: Before updating nextindex for peer 1, nextindex: 6[0m
[1;32m[peer 0] 2020/12/11 14:50:05.884161 raft.go:102: Suceess. Update nextindex for peer 1: 6, because newly add [{1 103}][0m
reading cfg.logs ... expected index: 2
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][2] - cmd1: 104, ok: true
cfg.logs[1]: map[1:1 2:104 3:100]
cfg.logs[1][2] - cmd1: 104, ok: true
cfg.logs[2]: map[]
cfg.logs[2][2] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 2
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][2] - cmd1: 104, ok: true
cfg.logs[1]: map[1:1 2:104 3:100]
cfg.logs[1][2] - cmd1: 104, ok: true
cfg.logs[2]: map[]
cfg.logs[2][2] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 2
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][2] - cmd1: 104, ok: true
cfg.logs[1]: map[1:1 2:104 3:100]
cfg.logs[1][2] - cmd1: 104, ok: true
cfg.logs[2]: map[]
cfg.logs[2][2] - cmd1: 0, ok: false
[1;32m[peer 0] 2020/12/11 14:50:05.979250 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.979361 raft.go:102: send heart beat to peer 1[0m
[1;32m[peer 0] 2020/12/11 14:50:05.979359 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:05.979461 raft.go:102: send heart beat to peer 2[0m
[1;33m[peer 1] 2020/12/11 14:50:05.979820 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:05.979875 raft.go:102: Checking whether to apply. commitIndex: 4, lastApplied: 2[0m
[1;33m[peer 1] 2020/12/11 14:50:05.979904 raft.go:102: Apply message with index 4 and command 102![0m
[1;33m[peer 1] 2020/12/11 14:50:05.979928 raft.go:102: rf.commitIndex: 5[0m
[1;34m[peer 2] 2020/12/11 14:50:05.979894 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.980091 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: -1[0m
[1;34m[peer 2] 2020/12/11 14:50:05.980143 raft.go:102: Apply message with index 1 and command 1![0m
[1;34m[peer 2] 2020/12/11 14:50:05.980167 raft.go:102: rf.commitIndex: 5[0m
reading cfg.logs ... expected index: 2
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][2] - cmd1: 104, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102]
cfg.logs[1][2] - cmd1: 104, ok: true
cfg.logs[2]: map[1:1]
cfg.logs[2][2] - cmd1: 0, ok: false
[1;32m[peer 0] 2020/12/11 14:50:06.079495 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.079671 raft.go:102: send heart beat to peer 1[0m
[1;32m[peer 0] 2020/12/11 14:50:06.079521 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.079744 raft.go:102: send heart beat to peer 2[0m
[1;34m[peer 2] 2020/12/11 14:50:06.080155 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:06.080210 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 0[0m
[1;34m[peer 2] 2020/12/11 14:50:06.080234 raft.go:102: Apply message with index 2 and command 104![0m
[1;34m[peer 2] 2020/12/11 14:50:06.080253 raft.go:102: rf.commitIndex: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:06.080326 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:06.080376 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 3[0m
[1;33m[peer 1] 2020/12/11 14:50:06.080399 raft.go:102: Apply message with index 5 and command 101![0m
[1;33m[peer 1] 2020/12/11 14:50:06.080451 raft.go:102: rf.commitIndex: 5[0m
[1;32m[peer 0] 2020/12/11 14:50:06.179927 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.180052 raft.go:102: send heart beat to peer 1[0m
[1;32m[peer 0] 2020/12/11 14:50:06.179943 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.180242 raft.go:102: send heart beat to peer 2[0m
[1;33m[peer 1] 2020/12/11 14:50:06.180550 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:06.180602 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 4[0m
[1;33m[peer 1] 2020/12/11 14:50:06.180637 raft.go:102: Apply message with index 6 and command 103![0m
[1;33m[peer 1] 2020/12/11 14:50:06.180659 raft.go:102: rf.commitIndex: 5[0m
[1;34m[peer 2] 2020/12/11 14:50:06.180731 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:06.180782 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:06.180817 raft.go:102: Apply message with index 3 and command 100![0m
[1;34m[peer 2] 2020/12/11 14:50:06.180839 raft.go:102: rf.commitIndex: 5[0m
reading cfg.logs ... expected index: 2
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][2] - cmd1: 104, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][2] - cmd1: 104, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][2] - cmd1: 104, ok: true
reading cfg.logs ... expected index: 2
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][2] - cmd1: 104, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][2] - cmd1: 104, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][2] - cmd1: 104, ok: true
reading cfg.logs ... expected index: 3
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][3] - cmd1: 100, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][3] - cmd1: 100, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][3] - cmd1: 100, ok: true
reading cfg.logs ... expected index: 3
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][3] - cmd1: 100, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][3] - cmd1: 100, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][3] - cmd1: 100, ok: true
reading cfg.logs ... expected index: 4
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][4] - cmd1: 102, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][4] - cmd1: 102, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][4] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 4
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][4] - cmd1: 102, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][4] - cmd1: 102, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][4] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 4
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][4] - cmd1: 102, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][4] - cmd1: 102, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][4] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 4
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][4] - cmd1: 102, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][4] - cmd1: 102, ok: true
cfg.logs[2]: map[1:1 2:104 3:100]
cfg.logs[2][4] - cmd1: 0, ok: false
[1;32m[peer 0] 2020/12/11 14:50:06.280173 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.280299 raft.go:102: send heart beat to peer 1[0m
[1;32m[peer 0] 2020/12/11 14:50:06.280230 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.280525 raft.go:102: send heart beat to peer 2[0m
[1;33m[peer 1] 2020/12/11 14:50:06.280792 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:06.280848 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:06.280891 raft.go:102: rf.commitIndex: 5[0m
[1;34m[peer 2] 2020/12/11 14:50:06.280985 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:06.281034 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 2[0m
[1;34m[peer 2] 2020/12/11 14:50:06.281058 raft.go:102: Apply message with index 4 and command 102![0m
[1;34m[peer 2] 2020/12/11 14:50:06.281078 raft.go:102: rf.commitIndex: 5[0m
reading cfg.logs ... expected index: 4
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][4] - cmd1: 102, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][4] - cmd1: 102, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102]
cfg.logs[2][4] - cmd1: 102, ok: true
reading cfg.logs ... expected index: 4
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][4] - cmd1: 102, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][4] - cmd1: 102, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102]
cfg.logs[2][4] - cmd1: 102, ok: true
reading cfg.logs ... expected index: 5
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][5] - cmd1: 101, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][5] - cmd1: 101, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102]
cfg.logs[2][5] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 5
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][5] - cmd1: 101, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][5] - cmd1: 101, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102]
cfg.logs[2][5] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 5
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][5] - cmd1: 101, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][5] - cmd1: 101, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102]
cfg.logs[2][5] - cmd1: 0, ok: false
[1;32m[peer 0] 2020/12/11 14:50:06.380422 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.380511 raft.go:102: send heart beat to peer 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.380423 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.380577 raft.go:102: send heart beat to peer 1[0m
[1;34m[peer 2] 2020/12/11 14:50:06.380916 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:06.380962 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 3[0m
[1;34m[peer 2] 2020/12/11 14:50:06.380993 raft.go:102: Apply message with index 5 and command 101![0m
[1;34m[peer 2] 2020/12/11 14:50:06.381013 raft.go:102: rf.commitIndex: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:06.381004 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:06.381198 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:06.381235 raft.go:102: rf.commitIndex: 5[0m
reading cfg.logs ... expected index: 5
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][5] - cmd1: 101, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][5] - cmd1: 101, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102 5:101]
cfg.logs[2][5] - cmd1: 101, ok: true
reading cfg.logs ... expected index: 5
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][5] - cmd1: 101, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][5] - cmd1: 101, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102 5:101]
cfg.logs[2][5] - cmd1: 101, ok: true
reading cfg.logs ... expected index: 6
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][6] - cmd1: 103, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][6] - cmd1: 103, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102 5:101]
cfg.logs[2][6] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 6
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][6] - cmd1: 103, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][6] - cmd1: 103, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102 5:101]
cfg.logs[2][6] - cmd1: 0, ok: false
reading cfg.logs ... expected index: 6
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][6] - cmd1: 103, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][6] - cmd1: 103, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102 5:101]
cfg.logs[2][6] - cmd1: 0, ok: false
[1;32m[peer 0] 2020/12/11 14:50:06.480729 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.480846 raft.go:102: send heart beat to peer 1[0m
[1;32m[peer 0] 2020/12/11 14:50:06.480773 raft.go:102: Prepare to sending heart beat, my state: 2[0m
[1;32m[peer 0] 2020/12/11 14:50:06.481067 raft.go:102: send heart beat to peer 2[0m
[1;33m[peer 1] 2020/12/11 14:50:06.481315 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;33m[peer 1] 2020/12/11 14:50:06.481375 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 5[0m
[1;33m[peer 1] 2020/12/11 14:50:06.481412 raft.go:102: rf.commitIndex: 5[0m
[1;34m[peer 2] 2020/12/11 14:50:06.481532 raft.go:102: Receive heartbeat from 0, leader's Term: 1, my Term: 1[0m
[1;34m[peer 2] 2020/12/11 14:50:06.481581 raft.go:102: Checking whether to apply. commitIndex: 5, lastApplied: 4[0m
[1;34m[peer 2] 2020/12/11 14:50:06.481610 raft.go:102: Apply message with index 6 and command 103![0m
[1;34m[peer 2] 2020/12/11 14:50:06.481631 raft.go:102: rf.commitIndex: 5[0m
reading cfg.logs ... expected index: 6
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][6] - cmd1: 103, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][6] - cmd1: 103, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[2][6] - cmd1: 103, ok: true
reading cfg.logs ... expected index: 6
cfg.logs[0]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[0][6] - cmd1: 103, ok: true
cfg.logs[1]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[1][6] - cmd1: 103, ok: true
cfg.logs[2]: map[1:1 2:104 3:100 4:102 5:101 6:103]
cfg.logs[2][6] - cmd1: 103, ok: true
  ... Passed
PASS
ok  	raft	1.618s
